apiVersion: v1
data:
  V1_0__insert_roles_script.sql: "create table IF NOT EXISTS public.adm_roles(\r\nrole_id
    int4 not null,\r\nname varchar(20),\r\nprimary key (role_id)\r\n);\r\n\r\nINSERT
    INTO adm_roles(role_id, name) VALUES(1,'ROLE_USER');\r\nINSERT INTO adm_roles(role_id,
    name) VALUES(2,'ROLE_ADMIN');\r\nINSERT INTO adm_roles(role_id, name) VALUES(3,'ROLE_SUPER_ADMIN');"
  V1_1__super_admin_user_insert.sql: "CREATE SEQUENCE adm_merchant_users_s\r\n    INCREMENT
    1\r\n    START 1\r\n    MINVALUE 1\r\n    MAXVALUE 9223372036854775807\r\n    CACHE
    1;\r\ncreate table IF NOT EXISTS public.adm_merchant_users (\r\n id BIGINT DEFAULT
    nextval('adm_merchant_users_s') PRIMARY KEY,\r\n user_id varchar (36)    not null,\r\n
    merchant_id varchar (36)   ,\r\n identity_provider_user_id varchar (36)  ,\r\n
    outlet_id varchar (36)  ,\r\n email varchar(255) unique,\r\n user_name varchar(255)
    unique,\r\n first_name varchar(255),\r\n last_name varchar(255),\r\n user_role
    varchar(255),\r\n status varchar(255),\r\n phone_number varchar(255) unique,\r\n
    \   is_default_password CHAR(1) DEFAULT 'N' CHECK (is_default_password IN ('Y',
    'N'))\r\n );\r\n\r\nINSERT INTO public.adm_merchant_users(\r\n\tuser_id, merchant_id,
    identity_provider_user_id, outlet_id, email, user_name, first_name, last_name,
    user_role, status, phone_number,is_default_password)\r\n\tVALUES ('427c248d-bd50-4e4e-aec8-54b62c439869','427c248d-bd50-4e4e-aec8-54b62c439869',
    '427c248d-bd50-4e4e-aec8-54b62c439869', '427c248d-bd50-4e4e-aec8-54b62c439869',
    'admin@gmail.com', 'admin','admin', 'admin', 'Super-Admin', 'Active', '+201158478677','Y');\r\n"
  V1_2__insert_acquirer.sql: "CREATE TABLE IF NOT EXISTS public.tms_acquirer\r\n(\r\n
    \   acquirer_id bigint NOT NULL,\r\n    created_by character varying(255) COLLATE
    pg_catalog.\"default\",\r\n    created_date timestamp without time zone,\r\n    last_modified_by
    character varying(255) COLLATE pg_catalog.\"default\",\r\n    last_modified_date
    timestamp without time zone,\r\n    bank_description character varying(255) COLLATE
    pg_catalog.\"default\",\r\n    bank_fiid character varying(255) COLLATE pg_catalog.\"default\",\r\n
    \   country_id character varying(255) COLLATE pg_catalog.\"default\",\r\n    enable_dcc_flag
    CHAR(1) DEFAULT 'N' CHECK (enable_dcc_flag IN ('Y', 'N')),\r\n    CONSTRAINT tms_acquirer_pkey
    PRIMARY KEY (acquirer_id),\r\n    CONSTRAINT uk_mea72n6jgc3rryew0hugvoqc4 UNIQUE
    (bank_fiid)\r\n    );\r\n\r\n\r\nINSERT INTO public.tms_acquirer(\r\nacquirer_id,
    bank_description, bank_fiid, country_id,enable_dcc_flag )\r\nVALUES (1,'AL RAJHI
    BANK', '06022021AUB', '355', 'Y');\r\n"
  V1_3__insert_merchant_bank.sql: "CREATE TABLE IF NOT EXISTS public.tms_merchant_bank
    (\r\n\tid int8 GENERATED BY DEFAULT AS IDENTITY( MINVALUE 0 NO MAXVALUE START
    0 NO CYCLE) NOT NULL,\r\n\tcreated_by varchar(255) NULL,\r\n\tcreated_date timestamp(6)
    NULL,\r\n\tlast_modified_by varchar(255) NULL,\r\n\tlast_modified_date timestamp(6)
    NULL,\r\n\tbank_name varchar(36) NOT NULL,\r\n\tcountry_id varchar(255) NOT NULL,\r\n\tCONSTRAINT
    tms_merchant_bank_pkey PRIMARY KEY (id),\r\n\tCONSTRAINT ukhh0gl5y6dwcjh5co84vx6npbn
    UNIQUE (bank_name)\r\n);\r\n\r\nINSERT INTO public.tms_merchant_bank(\r\ncreated_by,
    created_date, last_modified_by, last_modified_date, bank_name, country_id)\r\nVALUES
    ('realm-admin', NOW(), 'realm-admin', NOW(), 'Alrajhi Bank', '784');"
  V1_4__quartz_init_schema.sql: "-- Thanks to Patrick Lightbody for submitting this...\r\n--\r\n--
    In your Quartz properties file, you'll need to set\r\n-- org.quartz.jobStore.driverDelegateClass
    = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\r\n\r\nDROP TABLE IF EXISTS
    QRTZ_FIRED_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;\r\nDROP
    TABLE IF EXISTS QRTZ_SCHEDULER_STATE;\r\nDROP TABLE IF EXISTS QRTZ_LOCKS;\r\nDROP
    TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;\r\nDROP
    TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;\r\nDROP
    TABLE IF EXISTS QRTZ_TRIGGERS;\r\nDROP TABLE IF EXISTS QRTZ_JOB_DETAILS;\r\nDROP
    TABLE IF EXISTS QRTZ_CALENDARS;\r\n\r\nCREATE TABLE QRTZ_JOB_DETAILS\r\n(\r\n
    \ SCHED_NAME        VARCHAR(120) NOT NULL,\r\n  JOB_NAME          VARCHAR(200)
    NOT NULL,\r\n  JOB_GROUP         VARCHAR(200) NOT NULL,\r\n  DESCRIPTION       VARCHAR(250)
    NULL,\r\n  JOB_CLASS_NAME    VARCHAR(250) NOT NULL,\r\n  IS_DURABLE        BOOL
    \        NOT NULL,\r\n  IS_NONCONCURRENT  BOOL         NOT NULL,\r\n  IS_UPDATE_DATA
    \   BOOL         NOT NULL,\r\n  REQUESTS_RECOVERY BOOL         NOT NULL,\r\n  JOB_DATA
    \         BYTEA        NULL,\r\n  PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_TRIGGERS\r\n(\r\n  SCHED_NAME     VARCHAR(120) NOT NULL,\r\n  TRIGGER_NAME
    \  VARCHAR(200) NOT NULL,\r\n  TRIGGER_GROUP  VARCHAR(200) NOT NULL,\r\n  JOB_NAME
    \      VARCHAR(200) NOT NULL,\r\n  JOB_GROUP      VARCHAR(200) NOT NULL,\r\n  DESCRIPTION
    \   VARCHAR(250) NULL,\r\n  NEXT_FIRE_TIME BIGINT       NULL,\r\n  PREV_FIRE_TIME
    BIGINT       NULL,\r\n  PRIORITY       INTEGER      NULL,\r\n  TRIGGER_STATE  VARCHAR(16)
    \ NOT NULL,\r\n  TRIGGER_TYPE   VARCHAR(8)   NOT NULL,\r\n  START_TIME     BIGINT
    \      NOT NULL,\r\n  END_TIME       BIGINT       NULL,\r\n  CALENDAR_NAME  VARCHAR(200)
    NULL,\r\n  MISFIRE_INSTR  SMALLINT     NULL,\r\n  JOB_DATA       BYTEA        NULL,\r\n
    \ PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),\r\n  FOREIGN KEY (SCHED_NAME,
    JOB_NAME, JOB_GROUP)\r\n  REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_SIMPLE_TRIGGERS\r\n(\r\n  SCHED_NAME      VARCHAR(120) NOT NULL,\r\n
    \ TRIGGER_NAME    VARCHAR(200) NOT NULL,\r\n  TRIGGER_GROUP   VARCHAR(200) NOT
    NULL,\r\n  REPEAT_COUNT    BIGINT       NOT NULL,\r\n  REPEAT_INTERVAL BIGINT
    \      NOT NULL,\r\n  TIMES_TRIGGERED BIGINT       NOT NULL,\r\n  PRIMARY KEY
    (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),\r\n  FOREIGN KEY (SCHED_NAME, TRIGGER_NAME,
    TRIGGER_GROUP)\r\n  REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_CRON_TRIGGERS\r\n(\r\n  SCHED_NAME      VARCHAR(120) NOT NULL,\r\n
    \ TRIGGER_NAME    VARCHAR(200) NOT NULL,\r\n  TRIGGER_GROUP   VARCHAR(200) NOT
    NULL,\r\n  CRON_EXPRESSION VARCHAR(120) NOT NULL,\r\n  TIME_ZONE_ID    VARCHAR(80),\r\n
    \ PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),\r\n  FOREIGN KEY (SCHED_NAME,
    TRIGGER_NAME, TRIGGER_GROUP)\r\n  REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME,
    TRIGGER_GROUP)\r\n);\r\n\r\nCREATE TABLE QRTZ_SIMPROP_TRIGGERS\r\n(\r\n  SCHED_NAME
    \   VARCHAR(120)   NOT NULL,\r\n  TRIGGER_NAME  VARCHAR(200)   NOT NULL,\r\n  TRIGGER_GROUP
    VARCHAR(200)   NOT NULL,\r\n  STR_PROP_1    VARCHAR(512)   NULL,\r\n  STR_PROP_2
    \   VARCHAR(512)   NULL,\r\n  STR_PROP_3    VARCHAR(512)   NULL,\r\n  INT_PROP_1
    \   INT            NULL,\r\n  INT_PROP_2    INT            NULL,\r\n  LONG_PROP_1
    \  BIGINT         NULL,\r\n  LONG_PROP_2   BIGINT         NULL,\r\n  DEC_PROP_1
    \   NUMERIC(13, 4) NULL,\r\n  DEC_PROP_2    NUMERIC(13, 4) NULL,\r\n  BOOL_PROP_1
    \  BOOL           NULL,\r\n  BOOL_PROP_2   BOOL           NULL,\r\n  PRIMARY KEY
    (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),\r\n  FOREIGN KEY (SCHED_NAME, TRIGGER_NAME,
    TRIGGER_GROUP)\r\n  REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_BLOB_TRIGGERS\r\n(\r\n  SCHED_NAME    VARCHAR(120) NOT NULL,\r\n  TRIGGER_NAME
    \ VARCHAR(200) NOT NULL,\r\n  TRIGGER_GROUP VARCHAR(200) NOT NULL,\r\n  BLOB_DATA
    \    BYTEA        NULL,\r\n  PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),\r\n
    \ FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)\r\n  REFERENCES QRTZ_TRIGGERS
    (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)\r\n);\r\n\r\nCREATE TABLE QRTZ_CALENDARS\r\n(\r\n
    \ SCHED_NAME    VARCHAR(120) NOT NULL,\r\n  CALENDAR_NAME VARCHAR(200) NOT NULL,\r\n
    \ CALENDAR      BYTEA        NOT NULL,\r\n  PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)\r\n);\r\n\r\n\r\nCREATE
    TABLE QRTZ_PAUSED_TRIGGER_GRPS\r\n(\r\n  SCHED_NAME    VARCHAR(120) NOT NULL,\r\n
    \ TRIGGER_GROUP VARCHAR(200) NOT NULL,\r\n  PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_FIRED_TRIGGERS\r\n(\r\n  SCHED_NAME        VARCHAR(120) NOT NULL,\r\n
    \ ENTRY_ID          VARCHAR(95)  NOT NULL,\r\n  TRIGGER_NAME      VARCHAR(200)
    NOT NULL,\r\n  TRIGGER_GROUP     VARCHAR(200) NOT NULL,\r\n  INSTANCE_NAME     VARCHAR(200)
    NOT NULL,\r\n  FIRED_TIME        BIGINT       NOT NULL,\r\n  SCHED_TIME        BIGINT
    \      NOT NULL,\r\n  PRIORITY          INTEGER      NOT NULL,\r\n  STATE             VARCHAR(16)
    \ NOT NULL,\r\n  JOB_NAME          VARCHAR(200) NULL,\r\n  JOB_GROUP         VARCHAR(200)
    NULL,\r\n  IS_NONCONCURRENT  BOOL         NULL,\r\n  REQUESTS_RECOVERY BOOL         NULL,\r\n
    \ PRIMARY KEY (SCHED_NAME, ENTRY_ID)\r\n);\r\n\r\nCREATE TABLE QRTZ_SCHEDULER_STATE\r\n(\r\n
    \ SCHED_NAME        VARCHAR(120) NOT NULL,\r\n  INSTANCE_NAME     VARCHAR(200)
    NOT NULL,\r\n  LAST_CHECKIN_TIME BIGINT       NOT NULL,\r\n  CHECKIN_INTERVAL
    \ BIGINT       NOT NULL,\r\n  PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)\r\n);\r\n\r\nCREATE
    TABLE QRTZ_LOCKS\r\n(\r\n  SCHED_NAME VARCHAR(120) NOT NULL,\r\n  LOCK_NAME  VARCHAR(40)
    \ NOT NULL,\r\n  PRIMARY KEY (SCHED_NAME, LOCK_NAME)\r\n);\r\n\r\nCREATE INDEX
    IDX_QRTZ_J_REQ_RECOVERY\r\n  ON QRTZ_JOB_DETAILS (SCHED_NAME, REQUESTS_RECOVERY);\r\nCREATE
    INDEX IDX_QRTZ_J_GRP\r\n  ON QRTZ_JOB_DETAILS (SCHED_NAME, JOB_GROUP);\r\n\r\nCREATE
    INDEX IDX_QRTZ_T_J\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);\r\nCREATE
    INDEX IDX_QRTZ_T_JG\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, JOB_GROUP);\r\nCREATE INDEX
    IDX_QRTZ_T_C\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, CALENDAR_NAME);\r\nCREATE INDEX
    IDX_QRTZ_T_G\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);\r\nCREATE INDEX
    IDX_QRTZ_T_STATE\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE);\r\nCREATE
    INDEX IDX_QRTZ_T_N_STATE\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP,
    TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_N_G_STATE\r\n  ON QRTZ_TRIGGERS (SCHED_NAME,
    TRIGGER_GROUP, TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME\r\n  ON
    QRTZ_TRIGGERS (SCHED_NAME, NEXT_FIRE_TIME);\r\nCREATE INDEX IDX_QRTZ_T_NFT_ST\r\n
    \ ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);\r\nCREATE INDEX
    IDX_QRTZ_T_NFT_MISFIRE\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);\r\nCREATE
    INDEX IDX_QRTZ_T_NFT_ST_MISFIRE\r\n  ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR,
    NEXT_FIRE_TIME, TRIGGER_STATE);\r\nCREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP\r\n
    \ ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP,
    TRIGGER_STATE);\r\n\r\nCREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME\r\n  ON QRTZ_FIRED_TRIGGERS
    (SCHED_NAME, INSTANCE_NAME);\r\nCREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY\r\n
    \ ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);\r\nCREATE
    INDEX IDX_QRTZ_FT_J_G\r\n  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);\r\nCREATE
    INDEX IDX_QRTZ_FT_JG\r\n  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_GROUP);\r\nCREATE
    INDEX IDX_QRTZ_FT_T_G\r\n  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);\r\nCREATE
    INDEX IDX_QRTZ_FT_TG\r\n  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);\r\n\r\n\r\nCOMMIT;"
kind: ConfigMap
metadata:
  creationTimestamp: "2025-03-26T01:14:33Z"
  name: flyadmin-config
  # namespace: default
  uid: 82a399ba-201d-44a2-b712-11e4d34f6890
